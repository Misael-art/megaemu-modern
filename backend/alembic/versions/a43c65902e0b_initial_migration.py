"""Initial migration

Revision ID: a43c65902e0b
Revises: 
Create Date: 2025-07-18 09:17:35.586283

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a43c65902e0b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game_genres',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_game_genres'))
    )
    op.create_index(op.f('ix_game_genres_created_at'), 'game_genres', ['created_at'], unique=False)
    op.create_index(op.f('ix_game_genres_id'), 'game_genres', ['id'], unique=False)
    op.create_index(op.f('ix_game_genres_name'), 'game_genres', ['name'], unique=True)
    op.create_index(op.f('ix_game_genres_sort_order'), 'game_genres', ['sort_order'], unique=False)
    op.create_index(op.f('ix_game_genres_updated_at'), 'game_genres', ['updated_at'], unique=False)
    op.create_table('systems',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('manufacturer', sa.String(length=255), nullable=True),
    sa.Column('release_year', sa.Integer(), nullable=True),
    sa.Column('generation', sa.Integer(), nullable=True),
    sa.Column('cpu', sa.String(length=255), nullable=True),
    sa.Column('memory', sa.String(length=255), nullable=True),
    sa.Column('storage', sa.String(length=255), nullable=True),
    sa.Column('resolution', sa.String(length=100), nullable=True),
    sa.Column('default_emulator', sa.String(length=255), nullable=True),
    sa.Column('supported_extensions', sa.Text(), nullable=False),
    sa.Column('bios_required', sa.Boolean(), nullable=False),
    sa.Column('bios_files', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('auto_scan_enabled', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('rom_path', sa.Text(), nullable=True),
    sa.Column('bios_path', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('metadata', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_systems')),
    sa.UniqueConstraint('name', name='uq_system_name'),
    sa.UniqueConstraint('short_name', name='uq_system_short_name'),
    sa.UniqueConstraint('slug', name='uq_system_slug')
    )
    op.create_index(op.f('ix_systems_created_at'), 'systems', ['created_at'], unique=False)
    op.create_index(op.f('ix_systems_generation'), 'systems', ['generation'], unique=False)
    op.create_index(op.f('ix_systems_id'), 'systems', ['id'], unique=False)
    op.create_index(op.f('ix_systems_is_active'), 'systems', ['is_active'], unique=False)
    op.create_index(op.f('ix_systems_manufacturer'), 'systems', ['manufacturer'], unique=False)
    op.create_index(op.f('ix_systems_name'), 'systems', ['name'], unique=True)
    op.create_index(op.f('ix_systems_release_year'), 'systems', ['release_year'], unique=False)
    op.create_index(op.f('ix_systems_short_name'), 'systems', ['short_name'], unique=True)
    op.create_index(op.f('ix_systems_slug'), 'systems', ['slug'], unique=True)
    op.create_index(op.f('ix_systems_sort_order'), 'systems', ['sort_order'], unique=False)
    op.create_index(op.f('ix_systems_updated_at'), 'systems', ['updated_at'], unique=False)
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('password_changed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', 'GUEST', 'MODERATOR', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING', 'BANNED', name='userstatus'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reset_token', sa.String(length=255), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('two_factor_secret', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('metadata', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name='uq_user_email'),
    sa.UniqueConstraint('reset_token', name=op.f('uq_users_reset_token')),
    sa.UniqueConstraint('username', name='uq_user_username'),
    sa.UniqueConstraint('verification_token', name=op.f('uq_users_verification_token'))
    )
    op.create_index('ix_user_last_login', 'users', ['last_login'], unique=False)
    op.create_index('ix_user_status_role', 'users', ['status', 'role'], unique=False)
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_last_login'), 'users', ['last_login'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_status'), 'users', ['status'], unique=False)
    op.create_index(op.f('ix_users_updated_at'), 'users', ['updated_at'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('games',
    sa.Column('system_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('original_name', sa.String(length=500), nullable=True),
    sa.Column('alternative_names', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('developer', sa.String(length=255), nullable=True),
    sa.Column('publisher', sa.String(length=255), nullable=True),
    sa.Column('release_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('release_year', sa.Integer(), nullable=True),
    sa.Column('region', sa.String(length=10), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('esrb_rating', sa.String(length=10), nullable=True),
    sa.Column('user_rating', sa.Float(), nullable=True),
    sa.Column('critic_rating', sa.Float(), nullable=True),
    sa.Column('popularity_score', sa.Integer(), nullable=False),
    sa.Column('players_min', sa.Integer(), nullable=True),
    sa.Column('players_max', sa.Integer(), nullable=True),
    sa.Column('coop_support', sa.Boolean(), nullable=False),
    sa.Column('online_support', sa.Boolean(), nullable=False),
    sa.Column('crc32', sa.String(length=8), nullable=True),
    sa.Column('md5', sa.String(length=32), nullable=True),
    sa.Column('sha1', sa.String(length=40), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('play_count', sa.Integer(), nullable=False),
    sa.Column('last_played', sa.DateTime(timezone=True), nullable=True),
    sa.Column('import_source', sa.String(length=100), nullable=True),
    sa.Column('external_ids', sa.Text(), nullable=False),
    sa.Column('search_vector', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('metadata', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name=op.f('fk_games_system_id_systems'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_games')),
    sa.UniqueConstraint('system_id', 'name', 'region', name='uq_game_system_name_region')
    )
    op.create_index('ix_game_hashes', 'games', ['crc32', 'md5', 'sha1'], unique=False)
    op.create_index('ix_game_release_year_rating', 'games', ['release_year', 'user_rating'], unique=False)
    op.create_index('ix_game_search_vector', 'games', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index('ix_game_system_popularity', 'games', ['system_id', 'popularity_score'], unique=False)
    op.create_index(op.f('ix_games_crc32'), 'games', ['crc32'], unique=False)
    op.create_index(op.f('ix_games_created_at'), 'games', ['created_at'], unique=False)
    op.create_index(op.f('ix_games_developer'), 'games', ['developer'], unique=False)
    op.create_index(op.f('ix_games_id'), 'games', ['id'], unique=False)
    op.create_index(op.f('ix_games_is_favorite'), 'games', ['is_favorite'], unique=False)
    op.create_index(op.f('ix_games_md5'), 'games', ['md5'], unique=False)
    op.create_index(op.f('ix_games_name'), 'games', ['name'], unique=False)
    op.create_index(op.f('ix_games_popularity_score'), 'games', ['popularity_score'], unique=False)
    op.create_index(op.f('ix_games_publisher'), 'games', ['publisher'], unique=False)
    op.create_index(op.f('ix_games_region'), 'games', ['region'], unique=False)
    op.create_index(op.f('ix_games_release_date'), 'games', ['release_date'], unique=False)
    op.create_index(op.f('ix_games_release_year'), 'games', ['release_year'], unique=False)
    op.create_index(op.f('ix_games_sha1'), 'games', ['sha1'], unique=False)
    op.create_index(op.f('ix_games_slug'), 'games', ['slug'], unique=True)
    op.create_index(op.f('ix_games_system_id'), 'games', ['system_id'], unique=False)
    op.create_index(op.f('ix_games_updated_at'), 'games', ['updated_at'], unique=False)
    op.create_table('system_emulators',
    sa.Column('system_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('executable_path', sa.Text(), nullable=True),
    sa.Column('command_line', sa.Text(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('compatibility_rating', sa.Integer(), nullable=True),
    sa.Column('performance_rating', sa.Integer(), nullable=True),
    sa.Column('config_file', sa.Text(), nullable=True),
    sa.Column('additional_parameters', sa.Text(), nullable=True),
    sa.Column('supported_features', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name=op.f('fk_system_emulators_system_id_systems'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_emulators')),
    sa.UniqueConstraint('system_id', 'name', name='uq_system_emulator')
    )
    op.create_index(op.f('ix_system_emulators_created_at'), 'system_emulators', ['created_at'], unique=False)
    op.create_index(op.f('ix_system_emulators_id'), 'system_emulators', ['id'], unique=False)
    op.create_index(op.f('ix_system_emulators_system_id'), 'system_emulators', ['system_id'], unique=False)
    op.create_index(op.f('ix_system_emulators_updated_at'), 'system_emulators', ['updated_at'], unique=False)
    op.create_table('system_metadata',
    sa.Column('system_id', sa.UUID(), nullable=False),
    sa.Column('metadata_type', sa.String(length=100), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('json_value', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name=op.f('fk_system_metadata_system_id_systems'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_metadata')),
    sa.UniqueConstraint('system_id', 'metadata_type', 'key', name='uq_system_metadata')
    )
    op.create_index(op.f('ix_system_metadata_created_at'), 'system_metadata', ['created_at'], unique=False)
    op.create_index(op.f('ix_system_metadata_id'), 'system_metadata', ['id'], unique=False)
    op.create_index(op.f('ix_system_metadata_metadata_type'), 'system_metadata', ['metadata_type'], unique=False)
    op.create_index(op.f('ix_system_metadata_system_id'), 'system_metadata', ['system_id'], unique=False)
    op.create_index(op.f('ix_system_metadata_updated_at'), 'system_metadata', ['updated_at'], unique=False)
    op.create_table('tasks',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('task_type', sa.Enum('IMPORT_DAT', 'IMPORT_XML', 'SCAN_ROMS', 'VERIFY_ROMS', 'SCRAPE_GAME_INFO', 'SCRAPE_SCREENSHOTS', 'SCRAPE_METADATA', 'CLEANUP_FILES', 'BACKUP_DATABASE', 'OPTIMIZE_DATABASE', 'GENERATE_THUMBNAILS', 'COMPRESS_IMAGES', 'GENERATE_REPORT', 'EXPORT_DATA', name='tasktype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('celery_task_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILURE', 'CANCELLED', 'RETRY', 'REVOKED', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'CRITICAL', name='taskpriority'), nullable=False),
    sa.Column('parameters', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('options', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('progress_current', sa.Integer(), nullable=False),
    sa.Column('progress_total', sa.Integer(), nullable=False),
    sa.Column('progress_message', sa.String(length=500), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('result', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_traceback', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('timeout_seconds', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_tasks_created_by_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks'))
    )
    op.create_index('ix_task_execution_time', 'tasks', ['started_at', 'completed_at'], unique=False)
    op.create_index('ix_task_scheduled', 'tasks', ['scheduled_at', 'status'], unique=False)
    op.create_index('ix_task_status_priority', 'tasks', ['status', 'priority'], unique=False)
    op.create_index('ix_task_type_status', 'tasks', ['task_type', 'status'], unique=False)
    op.create_index(op.f('ix_tasks_celery_task_id'), 'tasks', ['celery_task_id'], unique=True)
    op.create_index(op.f('ix_tasks_completed_at'), 'tasks', ['completed_at'], unique=False)
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_created_by'), 'tasks', ['created_by'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_name'), 'tasks', ['name'], unique=False)
    op.create_index(op.f('ix_tasks_priority'), 'tasks', ['priority'], unique=False)
    op.create_index(op.f('ix_tasks_scheduled_at'), 'tasks', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_tasks_started_at'), 'tasks', ['started_at'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_task_type'), 'tasks', ['task_type'], unique=False)
    op.create_index(op.f('ix_tasks_updated_at'), 'tasks', ['updated_at'], unique=False)
    op.create_table('user_preferences',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.Column('sidebar_collapsed', sa.Boolean(), nullable=False),
    sa.Column('items_per_page', sa.Integer(), nullable=False),
    sa.Column('default_system_view', sa.String(length=20), nullable=False),
    sa.Column('show_screenshots', sa.Boolean(), nullable=False),
    sa.Column('auto_play_videos', sa.Boolean(), nullable=False),
    sa.Column('search_include_descriptions', sa.Boolean(), nullable=False),
    sa.Column('search_fuzzy_matching', sa.Boolean(), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('task_notifications', sa.Boolean(), nullable=False),
    sa.Column('auto_verify_roms', sa.Boolean(), nullable=False),
    sa.Column('auto_download_metadata', sa.Boolean(), nullable=False),
    sa.Column('auto_download_screenshots', sa.Boolean(), nullable=False),
    sa.Column('custom_rom_paths', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('custom_emulator_paths', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('saved_filters', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('advanced_settings', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_preferences_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_preferences'))
    )
    op.create_index(op.f('ix_user_preferences_created_at'), 'user_preferences', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_index(op.f('ix_user_preferences_updated_at'), 'user_preferences', ['updated_at'], unique=False)
    op.create_index(op.f('ix_user_preferences_user_id'), 'user_preferences', ['user_id'], unique=True)
    op.create_table('game_genre_associations',
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('genre_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default='now()', nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name=op.f('fk_game_genre_associations_game_id_games'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['genre_id'], ['game_genres.id'], name=op.f('fk_game_genre_associations_genre_id_game_genres'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'genre_id', name=op.f('pk_game_genre_associations'))
    )
    op.create_table('game_metadata',
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('metadata_type', sa.String(length=100), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('json_value', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name=op.f('fk_game_metadata_game_id_games'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_game_metadata')),
    sa.UniqueConstraint('game_id', 'metadata_type', 'key', name='uq_game_metadata')
    )
    op.create_index(op.f('ix_game_metadata_created_at'), 'game_metadata', ['created_at'], unique=False)
    op.create_index(op.f('ix_game_metadata_game_id'), 'game_metadata', ['game_id'], unique=False)
    op.create_index(op.f('ix_game_metadata_id'), 'game_metadata', ['id'], unique=False)
    op.create_index(op.f('ix_game_metadata_metadata_type'), 'game_metadata', ['metadata_type'], unique=False)
    op.create_index('ix_game_metadata_source', 'game_metadata', ['source', 'metadata_type'], unique=False)
    op.create_index(op.f('ix_game_metadata_updated_at'), 'game_metadata', ['updated_at'], unique=False)
    op.create_table('game_screenshots',
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('image_type', sa.String(length=50), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_url', sa.Text(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name=op.f('fk_game_screenshots_game_id_games'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_game_screenshots'))
    )
    op.create_index(op.f('ix_game_screenshots_created_at'), 'game_screenshots', ['created_at'], unique=False)
    op.create_index(op.f('ix_game_screenshots_game_id'), 'game_screenshots', ['game_id'], unique=False)
    op.create_index(op.f('ix_game_screenshots_id'), 'game_screenshots', ['id'], unique=False)
    op.create_index(op.f('ix_game_screenshots_image_type'), 'game_screenshots', ['image_type'], unique=False)
    op.create_index(op.f('ix_game_screenshots_updated_at'), 'game_screenshots', ['updated_at'], unique=False)
    op.create_index('ix_screenshot_game_type', 'game_screenshots', ['game_id', 'image_type'], unique=False)
    op.create_index('ix_screenshot_primary', 'game_screenshots', ['game_id', 'is_primary'], unique=False)
    op.create_table('roms',
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_extension', sa.String(length=20), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('crc32', sa.String(length=8), nullable=True),
    sa.Column('md5', sa.String(length=32), nullable=True),
    sa.Column('sha1', sa.String(length=40), nullable=True),
    sa.Column('sha256', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Enum('UNKNOWN', 'VERIFIED', 'GOOD', 'BAD', 'MISSING', 'DUPLICATE', 'RENAMED', 'OVERDUMP', 'UNDERDUMP', 'CORRUPT', 'HACKED', 'TRANSLATED', 'HOMEBREW', 'PROTOTYPE', 'BETA', 'DEMO', 'SAMPLE', name='romstatus'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_compressed', sa.Boolean(), nullable=False),
    sa.Column('compression_type', sa.Enum('NONE', 'ZIP', 'RAR', 'SEVEN_ZIP', 'GZ', 'TAR', 'TAR_GZ', 'TAR_BZ2', 'XZ', name='compressiontype'), nullable=True),
    sa.Column('compressed_size', sa.Integer(), nullable=True),
    sa.Column('uncompressed_size', sa.Integer(), nullable=True),
    sa.Column('region', sa.String(length=10), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('revision', sa.String(length=50), nullable=True),
    sa.Column('is_good', sa.Boolean(), nullable=False),
    sa.Column('is_prototype', sa.Boolean(), nullable=False),
    sa.Column('is_beta', sa.Boolean(), nullable=False),
    sa.Column('is_demo', sa.Boolean(), nullable=False),
    sa.Column('is_homebrew', sa.Boolean(), nullable=False),
    sa.Column('is_hack', sa.Boolean(), nullable=False),
    sa.Column('is_translation', sa.Boolean(), nullable=False),
    sa.Column('last_accessed', sa.DateTime(timezone=True), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.Column('import_source', sa.String(length=100), nullable=True),
    sa.Column('dat_name', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('metadata', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name=op.f('fk_roms_game_id_games'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roms')),
    sa.UniqueConstraint('game_id', 'filename', name='uq_rom_game_filename')
    )
    op.create_index('ix_rom_file_info', 'roms', ['file_extension', 'file_size'], unique=False)
    op.create_index('ix_rom_flags', 'roms', ['is_good', 'is_prototype', 'is_beta'], unique=False)
    op.create_index('ix_rom_hashes', 'roms', ['crc32', 'md5', 'sha1'], unique=False)
    op.create_index('ix_rom_status_verified', 'roms', ['status', 'is_verified'], unique=False)
    op.create_index(op.f('ix_roms_crc32'), 'roms', ['crc32'], unique=False)
    op.create_index(op.f('ix_roms_created_at'), 'roms', ['created_at'], unique=False)
    op.create_index(op.f('ix_roms_file_extension'), 'roms', ['file_extension'], unique=False)
    op.create_index(op.f('ix_roms_file_size'), 'roms', ['file_size'], unique=False)
    op.create_index(op.f('ix_roms_filename'), 'roms', ['filename'], unique=False)
    op.create_index(op.f('ix_roms_game_id'), 'roms', ['game_id'], unique=False)
    op.create_index(op.f('ix_roms_id'), 'roms', ['id'], unique=False)
    op.create_index(op.f('ix_roms_is_verified'), 'roms', ['is_verified'], unique=False)
    op.create_index(op.f('ix_roms_md5'), 'roms', ['md5'], unique=False)
    op.create_index(op.f('ix_roms_region'), 'roms', ['region'], unique=False)
    op.create_index(op.f('ix_roms_sha1'), 'roms', ['sha1'], unique=False)
    op.create_index(op.f('ix_roms_sha256'), 'roms', ['sha256'], unique=False)
    op.create_index(op.f('ix_roms_status'), 'roms', ['status'], unique=False)
    op.create_index(op.f('ix_roms_updated_at'), 'roms', ['updated_at'], unique=False)
    op.create_table('task_results',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('result_type', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('numeric_value', sa.Float(), nullable=True),
    sa.Column('json_value', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_results_task_id_tasks'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_results'))
    )
    op.create_index('ix_task_result_numeric', 'task_results', ['numeric_value'], unique=False)
    op.create_index('ix_task_result_type_category', 'task_results', ['result_type', 'category'], unique=False)
    op.create_index(op.f('ix_task_results_category'), 'task_results', ['category'], unique=False)
    op.create_index(op.f('ix_task_results_created_at'), 'task_results', ['created_at'], unique=False)
    op.create_index(op.f('ix_task_results_id'), 'task_results', ['id'], unique=False)
    op.create_index(op.f('ix_task_results_result_type'), 'task_results', ['result_type'], unique=False)
    op.create_index(op.f('ix_task_results_task_id'), 'task_results', ['task_id'], unique=False)
    op.create_index(op.f('ix_task_results_updated_at'), 'task_results', ['updated_at'], unique=False)
    op.create_table('rom_files',
    sa.Column('rom_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('crc32', sa.String(length=8), nullable=True),
    sa.Column('md5', sa.String(length=32), nullable=True),
    sa.Column('sha1', sa.String(length=40), nullable=True),
    sa.Column('compressed_size', sa.Integer(), nullable=True),
    sa.Column('compression_method', sa.String(length=50), nullable=True),
    sa.Column('is_main_file', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['rom_id'], ['roms.id'], name=op.f('fk_rom_files_rom_id_roms'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rom_files')),
    sa.UniqueConstraint('rom_id', 'file_path', name='uq_rom_file_path')
    )
    op.create_index('ix_rom_file_hashes', 'rom_files', ['crc32', 'md5', 'sha1'], unique=False)
    op.create_index(op.f('ix_rom_files_crc32'), 'rom_files', ['crc32'], unique=False)
    op.create_index(op.f('ix_rom_files_created_at'), 'rom_files', ['created_at'], unique=False)
    op.create_index(op.f('ix_rom_files_id'), 'rom_files', ['id'], unique=False)
    op.create_index(op.f('ix_rom_files_md5'), 'rom_files', ['md5'], unique=False)
    op.create_index(op.f('ix_rom_files_rom_id'), 'rom_files', ['rom_id'], unique=False)
    op.create_index(op.f('ix_rom_files_sha1'), 'rom_files', ['sha1'], unique=False)
    op.create_index(op.f('ix_rom_files_updated_at'), 'rom_files', ['updated_at'], unique=False)
    op.create_table('rom_verifications',
    sa.Column('rom_id', sa.UUID(), nullable=False),
    sa.Column('verification_type', sa.String(length=50), nullable=False),
    sa.Column('verification_source', sa.String(length=255), nullable=True),
    sa.Column('status_before', sa.Enum('UNKNOWN', 'VERIFIED', 'GOOD', 'BAD', 'MISSING', 'DUPLICATE', 'RENAMED', 'OVERDUMP', 'UNDERDUMP', 'CORRUPT', 'HACKED', 'TRANSLATED', 'HOMEBREW', 'PROTOTYPE', 'BETA', 'DEMO', 'SAMPLE', name='romstatus'), nullable=False),
    sa.Column('status_after', sa.Enum('UNKNOWN', 'VERIFIED', 'GOOD', 'BAD', 'MISSING', 'DUPLICATE', 'RENAMED', 'OVERDUMP', 'UNDERDUMP', 'CORRUPT', 'HACKED', 'TRANSLATED', 'HOMEBREW', 'PROTOTYPE', 'BETA', 'DEMO', 'SAMPLE', name='romstatus'), nullable=False),
    sa.Column('expected_crc32', sa.String(length=8), nullable=True),
    sa.Column('actual_crc32', sa.String(length=8), nullable=True),
    sa.Column('expected_md5', sa.String(length=32), nullable=True),
    sa.Column('actual_md5', sa.String(length=32), nullable=True),
    sa.Column('expected_sha1', sa.String(length=40), nullable=True),
    sa.Column('actual_sha1', sa.String(length=40), nullable=True),
    sa.Column('verification_details', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('verification_duration', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['rom_id'], ['roms.id'], name=op.f('fk_rom_verifications_rom_id_roms'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rom_verifications'))
    )
    op.create_index(op.f('ix_rom_verifications_created_at'), 'rom_verifications', ['created_at'], unique=False)
    op.create_index(op.f('ix_rom_verifications_id'), 'rom_verifications', ['id'], unique=False)
    op.create_index(op.f('ix_rom_verifications_rom_id'), 'rom_verifications', ['rom_id'], unique=False)
    op.create_index(op.f('ix_rom_verifications_updated_at'), 'rom_verifications', ['updated_at'], unique=False)
    op.create_index(op.f('ix_rom_verifications_verification_type'), 'rom_verifications', ['verification_type'], unique=False)
    op.create_index('ix_verification_status', 'rom_verifications', ['status_before', 'status_after'], unique=False)
    op.create_index('ix_verification_type_date', 'rom_verifications', ['verification_type', 'created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_verification_type_date', table_name='rom_verifications')
    op.drop_index('ix_verification_status', table_name='rom_verifications')
    op.drop_index(op.f('ix_rom_verifications_verification_type'), table_name='rom_verifications')
    op.drop_index(op.f('ix_rom_verifications_updated_at'), table_name='rom_verifications')
    op.drop_index(op.f('ix_rom_verifications_rom_id'), table_name='rom_verifications')
    op.drop_index(op.f('ix_rom_verifications_id'), table_name='rom_verifications')
    op.drop_index(op.f('ix_rom_verifications_created_at'), table_name='rom_verifications')
    op.drop_table('rom_verifications')
    op.drop_index(op.f('ix_rom_files_updated_at'), table_name='rom_files')
    op.drop_index(op.f('ix_rom_files_sha1'), table_name='rom_files')
    op.drop_index(op.f('ix_rom_files_rom_id'), table_name='rom_files')
    op.drop_index(op.f('ix_rom_files_md5'), table_name='rom_files')
    op.drop_index(op.f('ix_rom_files_id'), table_name='rom_files')
    op.drop_index(op.f('ix_rom_files_created_at'), table_name='rom_files')
    op.drop_index(op.f('ix_rom_files_crc32'), table_name='rom_files')
    op.drop_index('ix_rom_file_hashes', table_name='rom_files')
    op.drop_table('rom_files')
    op.drop_index(op.f('ix_task_results_updated_at'), table_name='task_results')
    op.drop_index(op.f('ix_task_results_task_id'), table_name='task_results')
    op.drop_index(op.f('ix_task_results_result_type'), table_name='task_results')
    op.drop_index(op.f('ix_task_results_id'), table_name='task_results')
    op.drop_index(op.f('ix_task_results_created_at'), table_name='task_results')
    op.drop_index(op.f('ix_task_results_category'), table_name='task_results')
    op.drop_index('ix_task_result_type_category', table_name='task_results')
    op.drop_index('ix_task_result_numeric', table_name='task_results')
    op.drop_table('task_results')
    op.drop_index(op.f('ix_roms_updated_at'), table_name='roms')
    op.drop_index(op.f('ix_roms_status'), table_name='roms')
    op.drop_index(op.f('ix_roms_sha256'), table_name='roms')
    op.drop_index(op.f('ix_roms_sha1'), table_name='roms')
    op.drop_index(op.f('ix_roms_region'), table_name='roms')
    op.drop_index(op.f('ix_roms_md5'), table_name='roms')
    op.drop_index(op.f('ix_roms_is_verified'), table_name='roms')
    op.drop_index(op.f('ix_roms_id'), table_name='roms')
    op.drop_index(op.f('ix_roms_game_id'), table_name='roms')
    op.drop_index(op.f('ix_roms_filename'), table_name='roms')
    op.drop_index(op.f('ix_roms_file_size'), table_name='roms')
    op.drop_index(op.f('ix_roms_file_extension'), table_name='roms')
    op.drop_index(op.f('ix_roms_created_at'), table_name='roms')
    op.drop_index(op.f('ix_roms_crc32'), table_name='roms')
    op.drop_index('ix_rom_status_verified', table_name='roms')
    op.drop_index('ix_rom_hashes', table_name='roms')
    op.drop_index('ix_rom_flags', table_name='roms')
    op.drop_index('ix_rom_file_info', table_name='roms')
    op.drop_table('roms')
    op.drop_index('ix_screenshot_primary', table_name='game_screenshots')
    op.drop_index('ix_screenshot_game_type', table_name='game_screenshots')
    op.drop_index(op.f('ix_game_screenshots_updated_at'), table_name='game_screenshots')
    op.drop_index(op.f('ix_game_screenshots_image_type'), table_name='game_screenshots')
    op.drop_index(op.f('ix_game_screenshots_id'), table_name='game_screenshots')
    op.drop_index(op.f('ix_game_screenshots_game_id'), table_name='game_screenshots')
    op.drop_index(op.f('ix_game_screenshots_created_at'), table_name='game_screenshots')
    op.drop_table('game_screenshots')
    op.drop_index(op.f('ix_game_metadata_updated_at'), table_name='game_metadata')
    op.drop_index('ix_game_metadata_source', table_name='game_metadata')
    op.drop_index(op.f('ix_game_metadata_metadata_type'), table_name='game_metadata')
    op.drop_index(op.f('ix_game_metadata_id'), table_name='game_metadata')
    op.drop_index(op.f('ix_game_metadata_game_id'), table_name='game_metadata')
    op.drop_index(op.f('ix_game_metadata_created_at'), table_name='game_metadata')
    op.drop_table('game_metadata')
    op.drop_table('game_genre_associations')
    op.drop_index(op.f('ix_user_preferences_user_id'), table_name='user_preferences')
    op.drop_index(op.f('ix_user_preferences_updated_at'), table_name='user_preferences')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_index(op.f('ix_user_preferences_created_at'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_tasks_updated_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_task_type'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_started_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_scheduled_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_priority'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_name'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_by'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_completed_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_celery_task_id'), table_name='tasks')
    op.drop_index('ix_task_type_status', table_name='tasks')
    op.drop_index('ix_task_status_priority', table_name='tasks')
    op.drop_index('ix_task_scheduled', table_name='tasks')
    op.drop_index('ix_task_execution_time', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_system_metadata_updated_at'), table_name='system_metadata')
    op.drop_index(op.f('ix_system_metadata_system_id'), table_name='system_metadata')
    op.drop_index(op.f('ix_system_metadata_metadata_type'), table_name='system_metadata')
    op.drop_index(op.f('ix_system_metadata_id'), table_name='system_metadata')
    op.drop_index(op.f('ix_system_metadata_created_at'), table_name='system_metadata')
    op.drop_table('system_metadata')
    op.drop_index(op.f('ix_system_emulators_updated_at'), table_name='system_emulators')
    op.drop_index(op.f('ix_system_emulators_system_id'), table_name='system_emulators')
    op.drop_index(op.f('ix_system_emulators_id'), table_name='system_emulators')
    op.drop_index(op.f('ix_system_emulators_created_at'), table_name='system_emulators')
    op.drop_table('system_emulators')
    op.drop_index(op.f('ix_games_updated_at'), table_name='games')
    op.drop_index(op.f('ix_games_system_id'), table_name='games')
    op.drop_index(op.f('ix_games_slug'), table_name='games')
    op.drop_index(op.f('ix_games_sha1'), table_name='games')
    op.drop_index(op.f('ix_games_release_year'), table_name='games')
    op.drop_index(op.f('ix_games_release_date'), table_name='games')
    op.drop_index(op.f('ix_games_region'), table_name='games')
    op.drop_index(op.f('ix_games_publisher'), table_name='games')
    op.drop_index(op.f('ix_games_popularity_score'), table_name='games')
    op.drop_index(op.f('ix_games_name'), table_name='games')
    op.drop_index(op.f('ix_games_md5'), table_name='games')
    op.drop_index(op.f('ix_games_is_favorite'), table_name='games')
    op.drop_index(op.f('ix_games_id'), table_name='games')
    op.drop_index(op.f('ix_games_developer'), table_name='games')
    op.drop_index(op.f('ix_games_created_at'), table_name='games')
    op.drop_index(op.f('ix_games_crc32'), table_name='games')
    op.drop_index('ix_game_system_popularity', table_name='games')
    op.drop_index('ix_game_search_vector', table_name='games', postgresql_using='gin')
    op.drop_index('ix_game_release_year_rating', table_name='games')
    op.drop_index('ix_game_hashes', table_name='games')
    op.drop_table('games')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_updated_at'), table_name='users')
    op.drop_index(op.f('ix_users_status'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_last_login'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_index('ix_user_status_role', table_name='users')
    op.drop_index('ix_user_last_login', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_systems_updated_at'), table_name='systems')
    op.drop_index(op.f('ix_systems_sort_order'), table_name='systems')
    op.drop_index(op.f('ix_systems_slug'), table_name='systems')
    op.drop_index(op.f('ix_systems_short_name'), table_name='systems')
    op.drop_index(op.f('ix_systems_release_year'), table_name='systems')
    op.drop_index(op.f('ix_systems_name'), table_name='systems')
    op.drop_index(op.f('ix_systems_manufacturer'), table_name='systems')
    op.drop_index(op.f('ix_systems_is_active'), table_name='systems')
    op.drop_index(op.f('ix_systems_id'), table_name='systems')
    op.drop_index(op.f('ix_systems_generation'), table_name='systems')
    op.drop_index(op.f('ix_systems_created_at'), table_name='systems')
    op.drop_table('systems')
    op.drop_index(op.f('ix_game_genres_updated_at'), table_name='game_genres')
    op.drop_index(op.f('ix_game_genres_sort_order'), table_name='game_genres')
    op.drop_index(op.f('ix_game_genres_name'), table_name='game_genres')
    op.drop_index(op.f('ix_game_genres_id'), table_name='game_genres')
    op.drop_index(op.f('ix_game_genres_created_at'), table_name='game_genres')
    op.drop_table('game_genres')
    # ### end Alembic commands ###