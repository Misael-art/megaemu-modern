# =============================================================================
# CONFIGURAÇÃO REDIS - MEGAEMU MODERN
# =============================================================================
# Configuração otimizada para cache e sessões

# =============================================================================
# CONFIGURAÇÕES GERAIS
# =============================================================================
# Bind em todas as interfaces (Docker)
bind 0.0.0.0

# Porta padrão
port 6379

# Timeout para conexões inativas (0 = desabilitado)
timeout 300

# Intervalo de keep-alive TCP
tcp-keepalive 60

# =============================================================================
# PERSISTÊNCIA
# =============================================================================
# Habilitar AOF (Append Only File) para durabilidade
appendonly yes
appendfilename "appendonly.aof"

# Sincronização do AOF
# everysec: sincroniza a cada segundo (recomendado)
# always: sincroniza a cada comando (mais seguro, mais lento)
# no: deixa o SO decidir (mais rápido, menos seguro)
appendfsync everysec

# Reescrita automática do AOF
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Snapshots RDB (backup)
save 900 1    # Salva se pelo menos 1 chave mudou em 900 segundos
save 300 10   # Salva se pelo menos 10 chaves mudaram em 300 segundos
save 60 10000 # Salva se pelo menos 10000 chaves mudaram em 60 segundos

# Nome do arquivo RDB
dbfilename dump.rdb

# Diretório de trabalho
dir /data

# =============================================================================
# MEMÓRIA
# =============================================================================
# Limite máximo de memória (ajuste conforme necessário)
# maxmemory 256mb

# Política de remoção quando atinge o limite de memória
# allkeys-lru: Remove chaves menos recentemente usadas
# volatile-lru: Remove chaves com TTL menos recentemente usadas
# allkeys-random: Remove chaves aleatoriamente
# volatile-random: Remove chaves com TTL aleatoriamente
# volatile-ttl: Remove chaves com menor TTL
# noeviction: Não remove nada, retorna erro
maxmemory-policy allkeys-lru

# Amostras para algoritmos LRU/TTL
maxmemory-samples 5

# =============================================================================
# SEGURANÇA
# =============================================================================
# Senha (será sobrescrita pela variável de ambiente)
# requirepass your_redis_password

# Comandos perigosos desabilitados
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG "CONFIG_b835c3f1a2e7"
rename-command SHUTDOWN "SHUTDOWN_b835c3f1a2e7"
rename-command DEBUG ""

# =============================================================================
# REDE
# =============================================================================
# Número máximo de conexões simultâneas
maxclients 10000

# Buffer de saída para clientes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# =============================================================================
# LOGGING
# =============================================================================
# Nível de log: debug, verbose, notice, warning
loglevel notice

# Arquivo de log (vazio = stdout)
logfile ""

# =============================================================================
# OTIMIZAÇÕES
# =============================================================================
# Compressão de listas
list-compress-depth 1

# Configurações de hash
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# Configurações de lista
list-max-ziplist-size -2

# Configurações de set
set-max-intset-entries 512

# Configurações de sorted set
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog
hll-sparse-max-bytes 3000

# =============================================================================
# CONFIGURAÇÕES AVANÇADAS
# =============================================================================
# Lazy freeing (liberação assíncrona de memória)
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes

# Configurações de I/O
io-threads 4
io-threads-do-reads yes

# Configurações de CPU
active-rehashing yes

# Configurações de cliente
client-query-buffer-limit 1gb
proto-max-bulk-len 512mb

# =============================================================================
# MÓDULOS E EXTENSÕES
# =============================================================================
# Habilitar notificações de eventos de chaves
notify-keyspace-events "Ex"

# =============================================================================
# CONFIGURAÇÕES ESPECÍFICAS PARA CACHE
# =============================================================================
# Configurações otimizadas para uso como cache de aplicação

# Desabilitar algumas funcionalidades não necessárias para cache
stop-writes-on-bgsave-error no
rdbcompression yes
rdbchecksum yes

# Configurações de replicação (se necessário)
# replica-serve-stale-data yes
# replica-read-only yes

# =============================================================================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# =============================================================================
# Configurações específicas para ambiente de desenvolvimento
# (podem ser sobrescritas em produção)

# Desabilitar proteção de modo protegido em desenvolvimento
protected-mode no

# Configurações de latência
latency-monitor-threshold 100

# =============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO
# =============================================================================
# Habilitar comandos de informação
# (útil para monitoramento com Prometheus)

# Configurações de slowlog
slowlog-log-slower-than 10000
slowlog-max-len 128